{"ast":null,"code":"var _jsxFileName = \"/home/vsnk/Videos/coffeePlannerApp/src/components/CoffeePlannerQuestion/index.js\";\n// Write your code here\nimport { Component } from 'react';\nimport QuestionOption from '../QuestionOption';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CoffeePlannerQuestion extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitAnswer = optionTitle => {\n      const {\n        questionType,\n        addAnswer\n      } = this.props;\n      const answer = {};\n      answer[questionType] = optionTitle;\n      addAnswer(answer);\n    };\n\n    this.renderOptions = () => {\n      const {\n        optionsList,\n        selectedOption\n      } = this.props;\n      return optionsList.map(option => {\n        const {\n          id,\n          optionTitle,\n          description\n        } = option;\n        return /*#__PURE__*/_jsxDEV(QuestionOption, {\n          submitAnswer: this.submitAnswer,\n          optionTitle: optionTitle,\n          description: description,\n          selected: selectedOption === optionTitle\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this);\n      });\n    };\n  }\n\n  render() {\n    const {\n      questionTitle\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"question-text\",\n        children: questionTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"options-container\",\n        children: this.renderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CoffeePlannerQuestion;","map":{"version":3,"sources":["/home/vsnk/Videos/coffeePlannerApp/src/components/CoffeePlannerQuestion/index.js"],"names":["Component","QuestionOption","CoffeePlannerQuestion","submitAnswer","optionTitle","questionType","addAnswer","props","answer","renderOptions","optionsList","selectedOption","map","option","id","description","render","questionTitle"],"mappings":";AAAA;AACA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAO,aAAP;;;AAEA,MAAMC,qBAAN,SAAoCF,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAC5CG,YAD4C,GAC7BC,WAAW,IAAI;AAC5B,YAAM;AAACC,QAAAA,YAAD;AAAeC,QAAAA;AAAf,UAA4B,KAAKC,KAAvC;AACA,YAAMC,MAAM,GAAG,EAAf;AACAA,MAAAA,MAAM,CAACH,YAAD,CAAN,GAAuBD,WAAvB;AACAE,MAAAA,SAAS,CAACE,MAAD,CAAT;AACD,KAN2C;;AAAA,SAQ5CC,aAR4C,GAQ5B,MAAM;AACpB,YAAM;AAACC,QAAAA,WAAD;AAAcC,QAAAA;AAAd,UAAgC,KAAKJ,KAA3C;AACA,aAAOG,WAAW,CAACE,GAAZ,CAAgBC,MAAM,IAAI;AAC/B,cAAM;AAACC,UAAAA,EAAD;AAAKV,UAAAA,WAAL;AAAkBW,UAAAA;AAAlB,YAAiCF,MAAvC;AACA,4BACE,QAAC,cAAD;AAEE,UAAA,YAAY,EAAE,KAAKV,YAFrB;AAGE,UAAA,WAAW,EAAEC,WAHf;AAIE,UAAA,WAAW,EAAEW,WAJf;AAKE,UAAA,QAAQ,EAAEJ,cAAc,KAAKP;AAL/B,WACOU,EADP;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAXM,CAAP;AAYD,KAtB2C;AAAA;;AAwB5CE,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAkB,KAAKV,KAA7B;AACA,wBACE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBAA+BU;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA,kBAAmC,KAAKR,aAAL;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAhC2C;;AAmC9C,eAAeP,qBAAf","sourcesContent":["// Write your code here\nimport {Component} from 'react'\nimport QuestionOption from '../QuestionOption'\nimport './index.css'\n\nclass CoffeePlannerQuestion extends Component {\n  submitAnswer = optionTitle => {\n    const {questionType, addAnswer} = this.props\n    const answer = {}\n    answer[questionType] = optionTitle\n    addAnswer(answer)\n  }\n\n  renderOptions = () => {\n    const {optionsList, selectedOption} = this.props\n    return optionsList.map(option => {\n      const {id, optionTitle, description} = option\n      return (\n        <QuestionOption\n          key={id}\n          submitAnswer={this.submitAnswer}\n          optionTitle={optionTitle}\n          description={description}\n          selected={selectedOption === optionTitle}\n        />\n      )\n    })\n  }\n\n  render() {\n    const {questionTitle} = this.props\n    return (\n      <li className=\"question-container\">\n        <h1 className=\"question-text\">{questionTitle}</h1>\n        <ul className=\"options-container\">{this.renderOptions()}</ul>\n      </li>\n    )\n  }\n}\n\nexport default CoffeePlannerQuestion\n"]},"metadata":{},"sourceType":"module"}