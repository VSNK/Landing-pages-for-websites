{"ast":null,"code":"import _classCallCheck from\"/home/vsnk/Videos/coffeePlannerApp/node_modules/.pnpm/@babel/runtime@7.12.1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/vsnk/Videos/coffeePlannerApp/node_modules/.pnpm/@babel/runtime@7.12.1/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/vsnk/Videos/coffeePlannerApp/node_modules/.pnpm/@babel/runtime@7.12.1/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/vsnk/Videos/coffeePlannerApp/node_modules/.pnpm/@babel/runtime@7.12.1/node_modules/@babel/runtime/helpers/esm/createSuper\";// Write your code here\nimport{Component}from'react';import QuestionOption from'../QuestionOption';import'./index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CoffeePlannerQuestion=/*#__PURE__*/function(_Component){_inherits(CoffeePlannerQuestion,_Component);var _super=_createSuper(CoffeePlannerQuestion);function CoffeePlannerQuestion(){var _this;_classCallCheck(this,CoffeePlannerQuestion);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.submitAnswer=function(optionTitle){var _this$props=_this.props,questionType=_this$props.questionType,addAnswer=_this$props.addAnswer;var answer={};answer[questionType]=optionTitle;addAnswer(answer);};_this.renderOptions=function(){var _this$props2=_this.props,optionsList=_this$props2.optionsList,selectedOption=_this$props2.selectedOption;return optionsList.map(function(option){var id=option.id,optionTitle=option.optionTitle,description=option.description;return/*#__PURE__*/_jsx(QuestionOption,{submitAnswer:_this.submitAnswer,optionTitle:optionTitle,description:description,selected:selectedOption===optionTitle},id);});};return _this;}_createClass(CoffeePlannerQuestion,[{key:\"render\",value:function render(){var questionTitle=this.props.questionTitle;return/*#__PURE__*/_jsxs(\"li\",{className:\"question-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"question-text\",children:questionTitle}),/*#__PURE__*/_jsx(\"ul\",{className:\"options-container\",children:this.renderOptions()})]});}}]);return CoffeePlannerQuestion;}(Component);export default CoffeePlannerQuestion;","map":{"version":3,"sources":["/home/vsnk/Videos/coffeePlannerApp/src/components/CoffeePlannerQuestion/index.js"],"names":["Component","QuestionOption","CoffeePlannerQuestion","submitAnswer","optionTitle","props","questionType","addAnswer","answer","renderOptions","optionsList","selectedOption","map","option","id","description","questionTitle"],"mappings":"wmBAAA;AACA,OAAQA,SAAR,KAAwB,OAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,CACA,MAAO,aAAP,C,2FAEMC,CAAAA,qB,uXACJC,Y,CAAe,SAAAC,WAAW,CAAI,CAC5B,gBAAkC,MAAKC,KAAvC,CAAOC,YAAP,aAAOA,YAAP,CAAqBC,SAArB,aAAqBA,SAArB,CACA,GAAMC,CAAAA,MAAM,CAAG,EAAf,CACAA,MAAM,CAACF,YAAD,CAAN,CAAuBF,WAAvB,CACAG,SAAS,CAACC,MAAD,CAAT,CACD,C,OAEDC,a,CAAgB,UAAM,CACpB,iBAAsC,MAAKJ,KAA3C,CAAOK,WAAP,cAAOA,WAAP,CAAoBC,cAApB,cAAoBA,cAApB,CACA,MAAOD,CAAAA,WAAW,CAACE,GAAZ,CAAgB,SAAAC,MAAM,CAAI,CAC/B,GAAOC,CAAAA,EAAP,CAAuCD,MAAvC,CAAOC,EAAP,CAAWV,WAAX,CAAuCS,MAAvC,CAAWT,WAAX,CAAwBW,WAAxB,CAAuCF,MAAvC,CAAwBE,WAAxB,CACA,mBACE,KAAC,cAAD,EAEE,YAAY,CAAE,MAAKZ,YAFrB,CAGE,WAAW,CAAEC,WAHf,CAIE,WAAW,CAAEW,WAJf,CAKE,QAAQ,CAAEJ,cAAc,GAAKP,WAL/B,EACOU,EADP,CADF,CASD,CAXM,CAAP,CAYD,C,uEAED,iBAAS,CACP,GAAOE,CAAAA,aAAP,CAAwB,KAAKX,KAA7B,CAAOW,aAAP,CACA,mBACE,YAAI,SAAS,CAAC,oBAAd,wBACE,WAAI,SAAS,CAAC,eAAd,UAA+BA,aAA/B,EADF,cAEE,WAAI,SAAS,CAAC,mBAAd,UAAmC,KAAKP,aAAL,EAAnC,EAFF,GADF,CAMD,C,mCAhCiCT,S,EAmCpC,cAAeE,CAAAA,qBAAf","sourcesContent":["// Write your code here\nimport {Component} from 'react'\nimport QuestionOption from '../QuestionOption'\nimport './index.css'\n\nclass CoffeePlannerQuestion extends Component {\n  submitAnswer = optionTitle => {\n    const {questionType, addAnswer} = this.props\n    const answer = {}\n    answer[questionType] = optionTitle\n    addAnswer(answer)\n  }\n\n  renderOptions = () => {\n    const {optionsList, selectedOption} = this.props\n    return optionsList.map(option => {\n      const {id, optionTitle, description} = option\n      return (\n        <QuestionOption\n          key={id}\n          submitAnswer={this.submitAnswer}\n          optionTitle={optionTitle}\n          description={description}\n          selected={selectedOption === optionTitle}\n        />\n      )\n    })\n  }\n\n  render() {\n    const {questionTitle} = this.props\n    return (\n      <li className=\"question-container\">\n        <h1 className=\"question-text\">{questionTitle}</h1>\n        <ul className=\"options-container\">{this.renderOptions()}</ul>\n      </li>\n    )\n  }\n}\n\nexport default CoffeePlannerQuestion\n"]},"metadata":{},"sourceType":"module"}