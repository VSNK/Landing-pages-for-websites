{"version":3,"sources":["components/card/index.tsx","components/card-list/index.tsx","components/filter/index.tsx","App.tsx","index.tsx"],"names":["Card","author","name","langColor","description","url","stars","forks","language","avatar","href","className","src","alt","style","color","CardList","repositories","map","repo","Filter","availableItems","setItem","onChange","event","target","value","length","item","index","App","useState","setLanguage","useQuery","fetch","then","res","json","availableLanguagesSuccess","isSuccess","availableLanguages","data","repositoriesSuccess","console","log","lang","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"wSAGe,SAASA,EAAT,GAAuG,IAAvFC,EAAsF,EAAtFA,OAAQC,EAA8E,EAA9EA,KAAMC,EAAwE,EAAxEA,UAAWC,EAA6D,EAA7DA,YAAaC,EAAgD,EAAhDA,IAAKC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,OAC9F,OACI,mBAAGC,KAAML,EAAKM,UAAU,eAAxB,SACI,sBAAKA,UAAU,OAAf,UACG,oBAAIA,UAAU,OAAd,SAAsBT,IACrB,mBAAGS,UAAU,cAAb,SAA4BP,IAC5B,sBAAKO,UAAU,oBAAf,UACI,oBAAIA,UAAU,SAAd,SAAwBV,IACxB,qBAAKU,UAAU,yBAAf,SACI,qBAAKC,IAAKH,EAAQI,IAAG,UAAKX,GAAQS,UAAU,sBAGpD,oBAAGA,UAAU,WAAb,6BAAwC,sBAAMG,MAAO,CAACC,MAAMZ,GAApB,SAAiCK,OACzE,sBAAKG,UAAU,gBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,mBAAGA,UAAU,mCACb,mBAAGA,UAAU,WAAb,SAAyBL,OAE7B,sBAAKK,UAAU,MAAf,UACI,mBAAGA,UAAU,0CACb,mBAAGA,UAAU,WAAb,SAAyBJ,e,MCnBlC,SAASS,EAAT,GAA8D,IAA3CC,EAA0C,EAA1CA,aAC9B,OACI,qBAAKN,UAAU,iBAAf,SACKM,EAAaC,KAAI,SAAAC,GAAI,OAAE,cAACnB,EAAD,eAA0BmB,GAAfA,EAAKjB,W,MCLrC,SAASkB,EAAT,GAAmH,IAAlGlB,EAAiG,EAAjGA,KAAMmB,EAA2F,EAA3FA,eAAgBC,EAA2E,EAA3EA,QAClD,OACI,sBAAKX,UAAU,mBAAf,UACI,mBAAGA,UAAU,cAAb,SAA4BT,IAC5B,wBAAQS,UAAU,gBAAgBY,SAAU,SAAAC,GAAK,OAAEF,EAAQE,EAAMC,OAAOC,QAAxE,SAC6B,IAAxBL,EAAeM,QAAcN,EAAeH,KAAI,SAACU,EAAMC,GAAP,OAAe,wBAAoBlB,UAAU,OAAOe,MAAOE,EAA5C,SAAmDA,GAAtCC,W,kBCmC9EC,MAnCf,WAEE,MAA8BC,mBAAS,IAAvC,mBAAKvB,EAAL,KAAewB,EAAf,KAEA,EAAyEC,YAAS,sBAChF,kBAAMC,MAAM,oDAAoDC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,aAD/DC,EAAjB,EAAMC,UAA4CC,EAAlD,EAA4CC,KAI5C,EAA6DR,YAAS,SAAD,OAAUzB,IAC7E,kBAAM0B,MAAM,gEAAD,OAAiE1B,IAAY2B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,aADvFK,EAAjB,EAAMH,UAAsCtB,EAA5C,EAAsCwB,KAOtC,OAHAE,QAAQC,IAAIF,GAIV,sBAAK/B,UAAU,gBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,YAAYC,IAAI,8EAA8EC,IAAI,WACjH,oBAAIF,UAAU,eAAd,sCAEA2B,GACA,cAAClB,EAAD,CAAQlB,KAAK,WAAWmB,eAAgBmB,EAAoBlB,QAAS,SAACuB,GAAkC,OAAnBb,EAAYa,IAAc,QAEjHH,EACAzB,EAAaU,OAAS,EACtB,cAACX,EAAD,CAAUC,aAAcA,IACxB,oBAAIN,UAAU,kBAAd,6BAEA,oBAAIA,UAAU,kBAAd,6BC/BFmC,EAAc,IAAIC,IAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAqBC,OAAQN,EAA7B,SACA,cAAC,EAAD,QAGFO,SAASC,eAAe,W","file":"static/js/main.deb007cd.chunk.js","sourcesContent":["import { Repository } from \"../../custom-types\";\nimport \"./index.css\"\n\nexport default function Card({ author, name, langColor, description, url, stars, forks, language, avatar}:Repository){\n    return (\n        <a href={url} className=\"wrapper-link\">\n            <div className=\"card\">\n               <h1 className=\"name\">{name}</h1>\n                <p className=\"description\">{description}</p>\n                <div className=\"profile-container\">\n                    <h1 className=\"author\">{author}</h1>\n                    <div className=\"profile-icon-container\">\n                        <img src={avatar} alt={`${name}`} className=\"profile-icon\" />\n                    </div>\n                </div>\n                <p className=\"language\">Developed using <span style={{color:langColor}}>{language}</span></p>\n                <div className=\"tag-container\">\n                    <div className=\"tag\">\n                        <i className=\"far fa-star tag-icon star-icon\"></i>\n                        <p className=\"tag-name\">{stars}</p>\n                    </div>\n                    <div className=\"tag\">\n                        <i className=\"fas fa-code-branch tag-icon fork-icon\"></i>\n                        <p className=\"tag-name\">{forks}</p>\n                    </div>\n                </div>\n            </div>\n        </a>\n    );\n}","import { Repository } from \"../../custom-types\";\nimport Card from \"../card\";\nimport \"./index.css\"\n\nexport default function CardList({repositories}:{repositories:Repository[]}){\n    return (\n        <div className=\"card-container\">\n            {repositories.map(repo=><Card key={repo.name} {...repo}/>)}\n        </div>\n    );\n}","import \"./index.css\";\n\nexport default function Filter({name, availableItems, setItem}:{name:string, availableItems:string[], setItem:(item:string)=>{}}){\n    return (\n        <div className=\"filter-container\">\n            <p className=\"filter-name\">{name}</p>\n            <select className=\"item-selector\" onChange={event=>setItem(event.target.value)}>\n                {availableItems.length!==0 && availableItems.map((item, index)=><option key={index} className=\"item\" value={item}>{item}</option>)}\n            </select>\n        </div>\n    )\n};","import { useState } from \"react\";\nimport CardList from \"./components/card-list\";\nimport Filter from \"./components/filter\";\n\nimport \"./App.css\"\nimport { useQuery } from \"react-query\";\n\nfunction App() {\n  \n  let [language, setLanguage] = useState('');\n\n  let { isSuccess: availableLanguagesSuccess, data: availableLanguages } = useQuery('availableLanguages', \n    () => fetch('https://api.trending-github.com/github/languages').then(res=>res.json())\n  );\n\n  let { isSuccess: repositoriesSuccess, data: repositories } = useQuery(`repos-${language}`, \n    () => fetch(`https://api.trending-github.com/github/repositories?language=${language}`).then(res=>res.json())\n  );\n\n  console.log(repositoriesSuccess);\n  \n\n  return (\n    <div className=\"app-container\">\n      <div className=\"header-container\">\n        <div className=\"logo-container\">\n          <img className=\"main-logo\" src=\"https://s19386.pcdn.co/wp-content/uploads/2017/10/github-logo-1-300x100.png\" alt=\"github\"/>\n          <h1 className=\"main-heading\">Trending Repositories</h1>\n        </div>\n        { availableLanguagesSuccess && \n          <Filter name=\"language\" availableItems={availableLanguages} setItem={(lang:string)=>{setLanguage(lang); return true;}}/> }\n      </div>\n      { repositoriesSuccess ?\n      ( repositories.length > 0 \n      ? <CardList repositories={repositories}/> \n      : <h1 className=\"nothing-to-show\">Nothing to show</h1>\n      )\n      : <h1 className=\"nothing-to-show\">Loading ...</h1>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport App from './App';\n\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n    <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}