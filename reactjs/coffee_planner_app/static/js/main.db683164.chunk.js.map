{"version":3,"sources":["components/QuestionOption/index.js","components/CoffeePlannerQuestion/index.js","components/CoffeePlanner/index.js","App.js","index.js"],"names":["props","optionTitle","description","selected","submitAnswer","className","type","onClick","alt","src","CoffeePlannerQuestion","questionType","addAnswer","answer","renderOptions","optionsList","selectedOption","map","option","id","questionTitle","this","Component","CoffeePlanner","state","showPlan","renderResponse","DRINK_TYPE","COFFEE_TYPE","QUANTITY","GRIND_TYPE","DELIVER_TYPE","undefined","setState","prevState","renderQuestions","coffeePlannerList","question","onShowPlan","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db683164.chunk.js","sourcesContent":["// Write your code here.\nimport './index.css'\n\nexport default props => {\n  const {optionTitle, description, selected, submitAnswer} = props\n  return (\n    <li className=\"option-list-item\">\n      <button\n        type=\"button\"\n        className={selected ? 'option-container active' : 'option-container'}\n        onClick={() => submitAnswer(optionTitle)}\n      >\n        <div className=\"option-title-container\">\n          <h1 className=\"option-title-name\">{optionTitle}</h1>\n          {!selected && (\n            <img\n              alt=\"blue cup\"\n              src=\"https://assets.ccbp.in/frontend/react-js/coffee-planner-blue-cup-img.png\"\n              className=\"option-title-icon\"\n            />\n          )}\n          {selected && (\n            <img\n              alt=\"white cup\"\n              src=\"https://assets.ccbp.in/frontend/react-js/coffee-planner-white-cup-img.png\"\n              className=\"option-title-icon\"\n            />\n          )}\n        </div>\n        <p className=\"option-description\">{description}</p>\n      </button>\n    </li>\n  )\n}\n","// Write your code here\nimport {Component} from 'react'\nimport QuestionOption from '../QuestionOption'\nimport './index.css'\n\nclass CoffeePlannerQuestion extends Component {\n  submitAnswer = optionTitle => {\n    const {questionType, addAnswer} = this.props\n    const answer = {}\n    answer[questionType] = optionTitle\n    addAnswer(answer)\n  }\n\n  renderOptions = () => {\n    const {optionsList, selectedOption} = this.props\n    return optionsList.map(option => {\n      const {id, optionTitle, description} = option\n      return (\n        <QuestionOption\n          key={id}\n          submitAnswer={this.submitAnswer}\n          optionTitle={optionTitle}\n          description={description}\n          selected={selectedOption === optionTitle}\n        />\n      )\n    })\n  }\n\n  render() {\n    const {questionTitle} = this.props\n    return (\n      <li className=\"question-container\">\n        <h1 className=\"question-text\">{questionTitle}</h1>\n        <ul className=\"options-container\">{this.renderOptions()}</ul>\n      </li>\n    )\n  }\n}\n\nexport default CoffeePlannerQuestion\n","// Write your code here.\nimport {Component} from 'react'\nimport CoffeePlannerQuestion from '../CoffeePlannerQuestion'\nimport './index.css'\n\nclass CoffeePlanner extends Component {\n  state = {showPlan: false}\n\n  renderResponse = () => {\n    const {\n      DRINK_TYPE,\n      COFFEE_TYPE,\n      QUANTITY,\n      GRIND_TYPE,\n      DELIVER_TYPE,\n    } = this.state\n\n    if (\n      DRINK_TYPE === undefined ||\n      COFFEE_TYPE === undefined ||\n      QUANTITY === undefined ||\n      GRIND_TYPE === undefined ||\n      DELIVER_TYPE === undefined\n    ) {\n      return (\n        <p className=\"plan\">Kindly select options for all the questions.</p>\n      )\n    }\n    return (\n      <p className=\"plan\">\n        I Drink my coffee as <span className=\"highlight\">{DRINK_TYPE}</span>,\n        with a <span className=\"highlight\">{COFFEE_TYPE}</span> type of been.{' '}\n        <span className=\"highlight\">{QUANTITY}</span> of{' '}\n        <span className=\"highlight\">{GRIND_TYPE}</span> ground, send to me{' '}\n        <span className=\"highlight\">{DELIVER_TYPE}</span>.\n      </p>\n    )\n  }\n\n  addAnswer = answer =>\n    this.setState(prevState => ({...prevState, ...answer, showPlan: false}))\n\n  renderQuestions = () => {\n    const {coffeePlannerList} = this.props\n    return coffeePlannerList.map(question => {\n      const {id, questionTitle, questionType, optionsList} = question\n      let selectedOption = null\n      // eslint-disable-next-line react/destructuring-assignment\n      selectedOption = this.state[questionType]\n      return (\n        <CoffeePlannerQuestion\n          key={id}\n          addAnswer={this.addAnswer}\n          questionTitle={questionTitle}\n          questionType={questionType}\n          optionsList={optionsList}\n          selectedOption={selectedOption}\n        />\n      )\n    })\n  }\n\n  onShowPlan = () =>\n    this.setState(prevState => ({\n      ...prevState,\n      showPlan: true,\n    }))\n\n  render() {\n    const {showPlan} = this.state\n    return (\n      <div className=\"app-container\">\n        <div className=\"header-section\">\n          <div className=\"header-inner-container\">\n            <h1 className=\"header-heading\">Create a Plan</h1>\n            <p className=\"header-description\">\n              We offer an assortment of the best artesian coffees from the globe\n              delivered fresh to the door create your plan with this\n            </p>\n          </div>\n        </div>\n        <div className=\"body-section\">\n          <ul className=\"questions-container\">{this.renderQuestions()}</ul>\n          <button type=\"button\" className=\"button\" onClick={this.onShowPlan}>\n            Create my plan\n          </button>\n          {showPlan && this.renderResponse()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CoffeePlanner\n","import CoffeePlanner from './components/CoffeePlanner'\n\nimport './App.css'\n\nexport const coffeePlannerList = [\n  {\n    id: 0,\n    questionType: 'DRINK_TYPE',\n    questionTitle: 'How do you drink your coffee?',\n    optionsList: [\n      {\n        id: 0,\n        optionTitle: 'Capsule',\n        description: 'Compatible with Nespresso systems and similar brewers.',\n      },\n      {\n        id: 1,\n        optionTitle: 'Filter',\n        description:\n          'For pour or drip methods like Aeropress, Chemex, and V60.',\n      },\n      {\n        id: 2,\n        optionTitle: 'Espresso',\n        description:\n          'Dense and finely ground beans for an intense, flavorful experience.',\n      },\n    ],\n  },\n  {\n    id: 1,\n    questionType: 'COFFEE_TYPE',\n    questionTitle: 'What type of coffee?',\n    optionsList: [\n      {\n        id: 3,\n        optionTitle: 'Single Origins',\n        description:\n          'Distinct, high quality coffee from a specific family-owned farm.',\n      },\n      {\n        id: 4,\n        optionTitle: 'Blended',\n        description:\n          'Combination of two or three dark roasted beans of organic coffees.',\n      },\n      {\n        id: 5,\n        optionTitle: 'Decaf',\n        description:\n          'Just like regular coffee, except the caffeine has been removed.',\n      },\n    ],\n  },\n  {\n    id: 2,\n    questionType: 'QUANTITY',\n    questionTitle: 'How much would you like?',\n    optionsList: [\n      {\n        id: 6,\n        optionTitle: '250 gms',\n        description: 'Perfect for a solo drinker. Yields about 12.',\n      },\n      {\n        id: 7,\n        optionTitle: '500 gms',\n        description:\n          'Perfect option for a couple. Yields about 40 delectable cups.',\n      },\n      {\n        id: 8,\n        optionTitle: '1000 gms',\n        description:\n          'Perfect for officers and events. Yields about 90 delightful cups.',\n      },\n    ],\n  },\n  {\n    id: 3,\n    questionType: 'GRIND_TYPE',\n    questionTitle: 'Want us to grind them?',\n    optionsList: [\n      {\n        id: 9,\n        optionTitle: 'Coarse',\n        description: 'This grind size is ideal for French Press brewing.',\n      },\n      {\n        id: 10,\n        optionTitle: 'Medium',\n        description: 'A medium grind is for a regular cup of drip coffee.',\n      },\n      {\n        id: 11,\n        optionTitle: 'Fine',\n        description:\n          'This grind is great for espresso. It has a consistency like table salt.',\n      },\n    ],\n  },\n  {\n    id: 4,\n    questionType: 'DELIVER_TYPE',\n    questionTitle: 'How often should we deliver?',\n    optionsList: [\n      {\n        id: 12,\n        optionTitle: 'Every week',\n        description: '$14.00 per shipment. Includes free first-class shipping.',\n      },\n      {\n        id: 13,\n        optionTitle: 'Every 2 weeks',\n        description: '$17.25 per shipment. Includes free priority shipping.',\n      },\n      {\n        id: 14,\n        optionTitle: 'Every month',\n        description: '$22.50 per shipment. Includes free priority shipping.',\n      },\n    ],\n  },\n]\n\nconst App = () => <CoffeePlanner coffeePlannerList={coffeePlannerList} />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}