{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/interviewQuestionsApp/src/components/Filters/index.js\";\n// Write you Code here\nimport { Component } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Filters extends Component {\n  render() {\n    const {\n      categoryData,\n      levelsData,\n      updateCategory,\n      updateLevel\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"filter-label\",\n          children: \"LANGUAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"filter-select\",\n          children: categoryData.map(category => {\n            const {\n              id,\n              language\n            } = category;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              onClick: () => updateCategory(language),\n              children: language\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"filter-label\",\n          children: \"DIFFICULTY LEVEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"filter-select\",\n          children: levelsData.map(category => {\n            const {\n              id,\n              level\n            } = category;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              onClick: () => {\n                console.log(`${level} is selected`);\n                updateLevel(level);\n              },\n              children: level\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Filters;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/interviewQuestionsApp/src/components/Filters/index.js"],"names":["Component","Filters","render","categoryData","levelsData","updateCategory","updateLevel","props","map","category","id","language","level","console","log"],"mappings":";AAAA;AACA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAO,aAAP;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9BE,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,YAAD;AAAeC,MAAAA,UAAf;AAA2BC,MAAAA,cAA3B;AAA2CC,MAAAA;AAA3C,QAA0D,KAAKC,KAArE;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAA,oBACGJ,YAAY,CAACK,GAAb,CAAiBC,QAAQ,IAAI;AAC5B,kBAAM;AAACC,cAAAA,EAAD;AAAKC,cAAAA;AAAL,gBAAiBF,QAAvB;AACA,gCACE;AAAiB,cAAA,OAAO,EAAE,MAAMJ,cAAc,CAACM,QAAD,CAA9C;AAAA,wBACGA;AADH,eAAaD,EAAb;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WAPA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAA,oBACGN,UAAU,CAACI,GAAX,CAAeC,QAAQ,IAAI;AAC1B,kBAAM;AAACC,cAAAA,EAAD;AAAKE,cAAAA;AAAL,gBAAcH,QAApB;AACA,gCACE;AAEE,cAAA,OAAO,EAAE,MAAM;AACbI,gBAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,KAAM,cAArB;AAEAN,gBAAAA,WAAW,CAACM,KAAD,CAAX;AACD,eANH;AAAA,wBAQGA;AARH,eACOF,EADP;AAAA;AAAA;AAAA;AAAA,oBADF;AAYD,WAdA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqCD;;AAxC6B;;AA2ChC,eAAeT,OAAf","sourcesContent":["// Write you Code here\nimport {Component} from 'react'\nimport './index.css'\n\nclass Filters extends Component {\n  render() {\n    const {categoryData, levelsData, updateCategory, updateLevel} = this.props\n    return (\n      <div className=\"filters-container\">\n        <div className=\"filter-container\">\n          <p className=\"filter-label\">LANGUAGE</p>\n          <select className=\"filter-select\">\n            {categoryData.map(category => {\n              const {id, language} = category\n              return (\n                <option key={id} onClick={() => updateCategory(language)}>\n                  {language}\n                </option>\n              )\n            })}\n          </select>\n        </div>\n        <div className=\"filter-container\">\n          <p className=\"filter-label\">DIFFICULTY LEVEL</p>\n          <select className=\"filter-select\">\n            {levelsData.map(category => {\n              const {id, level} = category\n              return (\n                <option\n                  key={id}\n                  onClick={() => {\n                    console.log(`${level} is selected`)\n\n                    updateLevel(level)\n                  }}\n                >\n                  {level}\n                </option>\n              )\n            })}\n          </select>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Filters\n"]},"metadata":{},"sourceType":"module"}